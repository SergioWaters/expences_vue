{"version":3,"file":"js/23.32d160a8.js","mappings":"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","sources":["webpack://expences/./node_modules/randomcolor/randomColor.js"],"sourcesContent":["// randomColor by David Merfield under the CC0 license\n// https://github.com/davidmerfield/randomColor/\n\n;(function(root, factory) {\n\n  // Support CommonJS\n  if (typeof exports === 'object') {\n    var randomColor = factory();\n\n    // Support NodeJS & Component, which allow module.exports to be a function\n    if (typeof module === 'object' && module && module.exports) {\n      exports = module.exports = randomColor;\n    }\n\n    // Support CommonJS 1.1.1 spec\n    exports.randomColor = randomColor;\n\n  // Support AMD\n  } else if (typeof define === 'function' && define.amd) {\n    define([], factory);\n\n  // Support vanilla script loading\n  } else {\n    root.randomColor = factory();\n  }\n\n}(this, function() {\n\n  // Seed to get repeatable colors\n  var seed = null;\n\n  // Shared color dictionary\n  var colorDictionary = {};\n\n  // Populate the color dictionary\n  loadColorBounds();\n\n  var randomColor = function (options) {\n\n    options = options || {};\n\n    // Check if there is a seed and ensure it's an\n    // integer. Otherwise, reset the seed value.\n    if (options.seed !== undefined && options.seed !== null && options.seed === parseInt(options.seed, 10)) {\n      seed = options.seed;\n\n    // A string was passed as a seed\n    } else if (typeof options.seed === 'string') {\n      seed = stringToInteger(options.seed);\n\n    // Something was passed as a seed but it wasn't an integer or string\n    } else if (options.seed !== undefined && options.seed !== null) {\n      throw new TypeError('The seed value must be an integer or string');\n\n    // No seed, reset the value outside.\n    } else {\n      seed = null;\n    }\n\n    var H,S,B;\n\n    // Check if we need to generate multiple colors\n    if (options.count !== null && options.count !== undefined) {\n\n      var totalColors = options.count,\n          colors = [];\n\n      options.count = null;\n\n      while (totalColors > colors.length) {\n\n        // Since we're generating multiple colors,\n        // incremement the seed. Otherwise we'd just\n        // generate the same color each time...\n        if (seed && options.seed) options.seed += 1;\n\n        colors.push(randomColor(options));\n      }\n\n      options.count = totalColors;\n\n      return colors;\n    }\n\n    // First we pick a hue (H)\n    H = pickHue(options);\n\n    // Then use H to determine saturation (S)\n    S = pickSaturation(H, options);\n\n    // Then use S and H to determine brightness (B).\n    B = pickBrightness(H, S, options);\n\n    // Then we return the HSB color in the desired format\n    return setFormat([H,S,B], options);\n  };\n\n  function pickHue (options) {\n\n    var hueRange = getHueRange(options.hue),\n        hue = randomWithin(hueRange);\n\n    // Instead of storing red as two seperate ranges,\n    // we group them, using negative numbers\n    if (hue < 0) {hue = 360 + hue;}\n\n    return hue;\n\n  }\n\n  function pickSaturation (hue, options) {\n\n    if (options.hue === 'monochrome') {\n      return 0;\n    }\n\n    if (options.luminosity === 'random') {\n      return randomWithin([0,100]);\n    }\n\n    var saturationRange = getSaturationRange(hue);\n\n    var sMin = saturationRange[0],\n        sMax = saturationRange[1];\n\n    switch (options.luminosity) {\n\n      case 'bright':\n        sMin = 55;\n        break;\n\n      case 'dark':\n        sMin = sMax - 10;\n        break;\n\n      case 'light':\n        sMax = 55;\n        break;\n   }\n\n    return randomWithin([sMin, sMax]);\n\n  }\n\n  function pickBrightness (H, S, options) {\n\n    var bMin = getMinimumBrightness(H, S),\n        bMax = 100;\n\n    switch (options.luminosity) {\n\n      case 'dark':\n        bMax = bMin + 20;\n        break;\n\n      case 'light':\n        bMin = (bMax + bMin)/2;\n        break;\n\n      case 'random':\n        bMin = 0;\n        bMax = 100;\n        break;\n    }\n\n    return randomWithin([bMin, bMax]);\n  }\n\n  function setFormat (hsv, options) {\n\n    switch (options.format) {\n\n      case 'hsvArray':\n        return hsv;\n\n      case 'hslArray':\n        return HSVtoHSL(hsv);\n\n      case 'hsl':\n        var hsl = HSVtoHSL(hsv);\n        return 'hsl('+hsl[0]+', '+hsl[1]+'%, '+hsl[2]+'%)';\n\n      case 'hsla':\n        var hslColor = HSVtoHSL(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'hsla('+hslColor[0]+', '+hslColor[1]+'%, '+hslColor[2]+'%, ' + alpha + ')';\n\n      case 'rgbArray':\n        return HSVtoRGB(hsv);\n\n      case 'rgb':\n        var rgb = HSVtoRGB(hsv);\n        return 'rgb(' + rgb.join(', ') + ')';\n\n      case 'rgba':\n        var rgbColor = HSVtoRGB(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'rgba(' + rgbColor.join(', ') + ', ' + alpha + ')';\n\n      default:\n        return HSVtoHex(hsv);\n    }\n\n  }\n\n  function getMinimumBrightness(H, S) {\n\n    var lowerBounds = getColorInfo(H).lowerBounds;\n\n    for (var i = 0; i < lowerBounds.length - 1; i++) {\n\n      var s1 = lowerBounds[i][0],\n          v1 = lowerBounds[i][1];\n\n      var s2 = lowerBounds[i+1][0],\n          v2 = lowerBounds[i+1][1];\n\n      if (S >= s1 && S <= s2) {\n\n         var m = (v2 - v1)/(s2 - s1),\n             b = v1 - m*s1;\n\n         return m*S + b;\n      }\n\n    }\n\n    return 0;\n  }\n\n  function getHueRange (colorInput) {\n\n    if (typeof parseInt(colorInput) === 'number') {\n\n      var number = parseInt(colorInput);\n\n      if (number < 360 && number > 0) {\n        return [number, number];\n      }\n\n    }\n\n    if (typeof colorInput === 'string') {\n\n      if (colorDictionary[colorInput]) {\n        var color = colorDictionary[colorInput];\n        if (color.hueRange) {return color.hueRange;}\n      } else if (colorInput.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)) {\n        var hue = HexToHSB(colorInput)[0];\n        return [ hue, hue ];\n      }\n    }\n\n    return [0,360];\n\n  }\n\n  function getSaturationRange (hue) {\n    return getColorInfo(hue).saturationRange;\n  }\n\n  function getColorInfo (hue) {\n\n    // Maps red colors to make picking hue easier\n    if (hue >= 334 && hue <= 360) {\n      hue-= 360;\n    }\n\n    for (var colorName in colorDictionary) {\n       var color = colorDictionary[colorName];\n       if (color.hueRange &&\n           hue >= color.hueRange[0] &&\n           hue <= color.hueRange[1]) {\n          return colorDictionary[colorName];\n       }\n    } return 'Color not found';\n  }\n\n  function randomWithin (range) {\n    if (seed === null) {\n      return Math.floor(range[0] + Math.random()*(range[1] + 1 - range[0]));\n    } else {\n      //Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n      var max = range[1] || 1;\n      var min = range[0] || 0;\n      seed = (seed * 9301 + 49297) % 233280;\n      var rnd = seed / 233280.0;\n      return Math.floor(min + rnd * (max - min));\n    }\n  }\n\n  function HSVtoHex (hsv){\n\n    var rgb = HSVtoRGB(hsv);\n\n    function componentToHex(c) {\n        var hex = c.toString(16);\n        return hex.length == 1 ? '0' + hex : hex;\n    }\n\n    var hex = '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\n\n    return hex;\n\n  }\n\n  function defineColor (name, hueRange, lowerBounds) {\n\n    var sMin = lowerBounds[0][0],\n        sMax = lowerBounds[lowerBounds.length - 1][0],\n\n        bMin = lowerBounds[lowerBounds.length - 1][1],\n        bMax = lowerBounds[0][1];\n\n    colorDictionary[name] = {\n      hueRange: hueRange,\n      lowerBounds: lowerBounds,\n      saturationRange: [sMin, sMax],\n      brightnessRange: [bMin, bMax]\n    };\n\n  }\n\n  function loadColorBounds () {\n\n    defineColor(\n      'monochrome',\n      null,\n      [[0,0],[100,0]]\n    );\n\n    defineColor(\n      'red',\n      [-26,18],\n      [[20,100],[30,92],[40,89],[50,85],[60,78],[70,70],[80,60],[90,55],[100,50]]\n    );\n\n    defineColor(\n      'orange',\n      [19,46],\n      [[20,100],[30,93],[40,88],[50,86],[60,85],[70,70],[100,70]]\n    );\n\n    defineColor(\n      'yellow',\n      [47,62],\n      [[25,100],[40,94],[50,89],[60,86],[70,84],[80,82],[90,80],[100,75]]\n    );\n\n    defineColor(\n      'green',\n      [63,178],\n      [[30,100],[40,90],[50,85],[60,81],[70,74],[80,64],[90,50],[100,40]]\n    );\n\n    defineColor(\n      'blue',\n      [179, 257],\n      [[20,100],[30,86],[40,80],[50,74],[60,60],[70,52],[80,44],[90,39],[100,35]]\n    );\n\n    defineColor(\n      'purple',\n      [258, 282],\n      [[20,100],[30,87],[40,79],[50,70],[60,65],[70,59],[80,52],[90,45],[100,42]]\n    );\n\n    defineColor(\n      'pink',\n      [283, 334],\n      [[20,100],[30,90],[40,86],[60,84],[80,80],[90,75],[100,73]]\n    );\n\n  }\n\n  function HSVtoRGB (hsv) {\n\n    // this doesn't work for the values of 0 and 360\n    // here's the hacky fix\n    var h = hsv[0];\n    if (h === 0) {h = 1;}\n    if (h === 360) {h = 359;}\n\n    // Rebase the h,s,v values\n    h = h/360;\n    var s = hsv[1]/100,\n        v = hsv[2]/100;\n\n    var h_i = Math.floor(h*6),\n      f = h * 6 - h_i,\n      p = v * (1 - s),\n      q = v * (1 - f*s),\n      t = v * (1 - (1 - f)*s),\n      r = 256,\n      g = 256,\n      b = 256;\n\n    switch(h_i) {\n      case 0: r = v; g = t; b = p;  break;\n      case 1: r = q; g = v; b = p;  break;\n      case 2: r = p; g = v; b = t;  break;\n      case 3: r = p; g = q; b = v;  break;\n      case 4: r = t; g = p; b = v;  break;\n      case 5: r = v; g = p; b = q;  break;\n    }\n\n    var result = [Math.floor(r*255), Math.floor(g*255), Math.floor(b*255)];\n    return result;\n  }\n\n  function HexToHSB (hex) {\n    hex = hex.replace(/^#/, '');\n    hex = hex.length === 3 ? hex.replace(/(.)/g, '$1$1') : hex;\n\n    var red = parseInt(hex.substr(0, 2), 16) / 255,\n          green = parseInt(hex.substr(2, 2), 16) / 255,\n          blue = parseInt(hex.substr(4, 2), 16) / 255;\n\n    var cMax = Math.max(red, green, blue),\n          delta = cMax - Math.min(red, green, blue),\n          saturation = cMax ? (delta / cMax) : 0;\n\n    switch (cMax) {\n      case red: return [ 60 * (((green - blue) / delta) % 6) || 0, saturation, cMax ];\n      case green: return [ 60 * (((blue - red) / delta) + 2) || 0, saturation, cMax ];\n      case blue: return [ 60 * (((red - green) / delta) + 4) || 0, saturation, cMax ];\n    }\n  }\n\n  function HSVtoHSL (hsv) {\n    var h = hsv[0],\n      s = hsv[1]/100,\n      v = hsv[2]/100,\n      k = (2-s)*v;\n\n    return [\n      h,\n      Math.round(s*v / (k<1 ? k : 2-k) * 10000) / 100,\n      k/2 * 100\n    ];\n  }\n\n  function stringToInteger (string) {\n    var total = 0\n    for (var i = 0; i !== string.length; i++) {\n      if (total >= Number.MAX_SAFE_INTEGER) break;\n      total += string.charCodeAt(i)\n    }\n    return total\n  }\n\n  return randomColor;\n}));\n"],"names":["root","factory","randomColor","module","exports","this","seed","colorDictionary","loadColorBounds","options","undefined","parseInt","stringToInteger","TypeError","H","S","B","count","totalColors","colors","length","push","pickHue","pickSaturation","pickBrightness","setFormat","hueRange","getHueRange","hue","randomWithin","luminosity","saturationRange","getSaturationRange","sMin","sMax","bMin","getMinimumBrightness","bMax","hsv","format","HSVtoHSL","hsl","hslColor","alpha","Math","random","HSVtoRGB","rgb","join","rgbColor","HSVtoHex","lowerBounds","getColorInfo","i","s1","v1","s2","v2","m","b","colorInput","number","color","match","HexToHSB","colorName","range","floor","max","min","rnd","componentToHex","c","hex","toString","defineColor","name","brightnessRange","h","s","v","h_i","f","p","q","t","r","g","result","replace","red","substr","green","blue","cMax","delta","saturation","k","round","string","total","Number","MAX_SAFE_INTEGER","charCodeAt"],"sourceRoot":""}